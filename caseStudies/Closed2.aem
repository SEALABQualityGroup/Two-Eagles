ARCHI_TYPE Open_Network(void)
% la seguente rete di code corrisponde ad una rete di code chiusa con 4 jobs,
% un centro di delay e un server. Ha un unico
% carico di lavoro.
	ARCHI_ELEM_TYPES
		ELEM_TYPE Cliente(void)
			BEHAVIOR
			SingleCustArrProc(void;void) =
				<genera, exp(5)>.SingleCustArrProc2();
			SingleCustArrProc2(void;void) =
					<deliver1, inf>.SingleCustArrProc3();
			SingleCustArrProc3(void;void) =
					<return1, _>.SingleCustArrProc()
		INPUT_INTERACTIONS
			UNI return1
		OUTPUT_INTERACTIONS
			UNI deliver1
		ELEM_TYPE Servizio(void)
			BEHAVIOR
			ServProcNoBuffer(void;void) =
				<arrive1,inf>.ServProcNoBufferServ1();
			ServProcNoBufferServ1(void;void) =
				<serve1,exp(0.1)>.ServProcNoBufferRout1();
			ServProcNoBufferRout1(void;void) =
				<leave11, inf>.ServProcNoBuffer()
		INPUT_INTERACTIONS
			UNI arrive1
		OUTPUT_INTERACTIONS
			OR leave11
		ELEM_TYPE Buffer(void)
			BEHAVIOR
				UnboundedBuffer(integer h1 := 0;void) =
					choice
						{
						<get1, _>.UnboundedBuffer(h1+1),
						cond(h1 > 0)-><put1,_>.UnboundedBuffer(h1 - 1)
						}
		INPUT_INTERACTIONS
			OR get1
		OUTPUT_INTERACTIONS
			UNI put1			
		ARCHI_TOPOLOGY
			ARCHI_ELEM_INSTANCES
				PROVAClienti : Cliente();
				PROVAClienti2 : Cliente();
				PROVAClienti3 : Cliente();
				PROVAClienti4 : Cliente();
				PROVAServizioNoBuffer : Servizio();
				PROVABuffer : Buffer()
			ARCHI_INTERACTIONS
  				void
			ARCHI_ATTACHMENTS
				% interazioni di output per il primo cliente
				FROM PROVAClienti.deliver1 TO PROVABuffer.get1;
				
				% interazioni di output per il secondo cliente
				FROM PROVAClienti2.deliver1 TO PROVABuffer.get1;
				
				% interazioni di output per il terzo cliente
				FROM PROVAClienti3.deliver1 TO PROVABuffer.get1;
				
				% interazioni di output per il quarto cliente
				FROM PROVAClienti4.deliver1 TO PROVABuffer.get1;
				
				% interazioni di input per il primo cliente
				FROM PROVAServizioNoBuffer.leave11 TO PROVAClienti.return1;
				
				% interazioni di output per il secondo cliente
				FROM PROVAServizioNoBuffer.leave11 TO PROVAClienti2.return1;

				% interazioni di output per il terzo cliente				
				FROM PROVAServizioNoBuffer.leave11 TO PROVAClienti3.return1;
				
				% interazioni di output per il terzo cliente				
				FROM PROVAServizioNoBuffer.leave11 TO PROVAClienti4.return1;
				
				% interazioni di input del buffer
				FROM PROVABuffer.put1 TO PROVAServizioNoBuffer.arrive1
END